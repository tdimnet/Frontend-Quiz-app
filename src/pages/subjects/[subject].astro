---
type Question = {
  answer: string;
  options: string[];
  question: string;
};

interface Props {
  quizData: {
    color: string;
    icon: string;
    questions: Question[];
    title: string;
  };
}

import type { GetStaticPaths } from "astro";

import data from "../../data.json";

import DefaultLayout from "../../layouts/DefaultLayout.astro";
import QuestionNumber from "../../components/QuestionNumber.astro";
import Question from "../../components/Question.astro";
import ProgressBar from "../../components/ProgressBar.astro";
import Answer from "../../components/Answer.astro";
import SubmitButton from "../../components/SubmitButton.astro";

export const getStaticPaths = (() => {
  return [
    {
      params: { subject: "html" },
      props: {
        quizData: data.quizzes.filter((quiz) => quiz.title === "HTML")[0],
      },
    },
    {
      params: { subject: "css" },
      props: {
        quizData: data.quizzes.filter((quiz) => quiz.title === "CSS")[0],
      },
    },
    {
      params: { subject: "javascript" },
      props: {
        quizData: data.quizzes.filter((quiz) => quiz.title === "JavaScript")[0],
      },
    },
    {
      params: { subject: "accessibility" },
      props: {
        quizData: data.quizzes.filter(
          (quiz) => quiz.title === "Accessibility"
        )[0],
      },
    },
  ];
}) satisfies GetStaticPaths;

const {
  quizData: { color, icon, title, questions },
} = Astro.props;
---

<DefaultLayout color={color} icon={icon} title={title}>
  <div class="quiz-wrapper">
    <QuestionNumber />
    <Question />
  
    <ProgressBar />
  
    <ul class="answers-wrapper">
      <Answer number="A" content="4.5 : 1" />
      <Answer number="B" content="3 : 1" />
      <Answer number="C" content="2.5 : 1" />
      <Answer number="D" content="5 : 1" />
    </ul>
  
    <SubmitButton id="submit-btn" label="Submit Answer" />
    <SubmitButton id="next-question-btn" label="Next Question" />
  </div>

  <div class="result-wrapper">
    <h1>
      Quiz completed
      <br />
      You scored
    </h1>
  </div>
</DefaultLayout>

<style>
  .quiz-wrapper {
    display: none;
  }

  .answers-wrapper {
    list-style-type: none;
    padding-left: 0;

    li {
      margin-bottom: 12px;
    }
  }
</style>

<script define:vars={{ questions }}>
  const $submitBtn = document.querySelector("#submit-btn");

  const $nextQuestionBtn = document.querySelector("#next-question-btn");
  $nextQuestionBtn.classList.add("hidden");

  let currentQuestion = 0;
  let quizScore = 0;

  function onClickAnswer() {
    const $answerBtns = document.querySelectorAll(".answer-btn");

    $answerBtns.forEach(($answerBtn) => {
      $answerBtn.addEventListener("click", function () {
        $answerBtns.forEach(($answerBtn) =>
          $answerBtn.classList.remove("active")
        );
        $answerBtn.classList.add("active");
      });
    });
  }

  function onCheckAnswer() {
    const $answerBtns = document.querySelectorAll(".answer-btn");
    const $choosenAnswerBtn = document.querySelector(".active");

    if ($choosenAnswerBtn) {
      $submitBtn.classList.add("hidden");
      $nextQuestionBtn.classList.remove("hidden");

      const choosenAnswer = document.querySelector(
        ".active .answer-content"
      ).textContent;
      const correctAnswer = questions[currentQuestion].answer;
      const $correctAnswer =
        $answerBtns[questions[currentQuestion].options.indexOf(correctAnswer)];

      $answerBtns.forEach(($answerBtn) => {
        $answerBtn.classList.remove("active", "correct-answer", "wrong-answer");
      });

      if (choosenAnswer === correctAnswer) {
        $choosenAnswerBtn.classList.add("correct-answer");
        quizScore++;
      } else {
        $choosenAnswerBtn.classList.add("wrong-answer");
        $correctAnswer.classList.add("correct-answer");
      }
    }
  }

  function handleQuiz() {
    const $answerBtns = document.querySelectorAll(".answer-btn");

    $answerBtns.forEach(($answerBtn) => {
      $answerBtn.classList.remove("active", "correct-answer", "wrong-answer");
    });

    currentQuestion++;

    const questionNumber = document.querySelector(".question-number");
    questionNumber.textContent = currentQuestion;

    const $question = document.querySelector(".question");
    const quizQuestion = questions[currentQuestion].question;
    $question.textContent = quizQuestion;

    const $answersContent = document.querySelectorAll(".answer-content");
    $answersContent.forEach(($answerContent, index) => {
      $answerContent.textContent = questions[currentQuestion].options[index];
    });
  }

  $submitBtn.addEventListener("click", function () {
    onCheckAnswer();
  });

  $nextQuestionBtn.addEventListener("click", function () {
    $submitBtn.classList.remove("hidden");
    $nextQuestionBtn.classList.add("hidden");

    if (currentQuestion === questions.length) {
      console.log("====");
      console.log("Le score au quiz est", quizScore);
      console.log("====");
    } else {
      handleQuiz();
    }
  });

  function main() {
    onClickAnswer();
    handleQuiz();
  }

  main();
</script>
